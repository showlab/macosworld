{"id": "252f44fc-ab95-c1d9-3213-686e398b91da", "snapshot": {"en": "snapshot_usedApps_en", "zh": "snapshot_usedApps_zh", "ar": "snapshot_usedApps_ar", "ja": "snapshot_usedApps_ja", "ru": "snapshot_usedApps_ru"}, "force_snapshot_recovery": false, "task": {"en": "There's a METAR API in my notes. Help me access this URL directly, then copy the current METAR weather report back into the note. ", "zh": "\u6211\u7684\u8bb0\u4e8b\u672c\u91cc\u9762\u6709\u4e00\u4e2aMETAR API\u3002\u5e2e\u6211\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u5740\uff0c\u7136\u540e\u628a\u5f53\u524d\u65f6\u95f4\u7684METAR\u6c14\u8c61\u62a5\u544a\u590d\u5236\u56de\u8fd9\u4e2a\u5907\u5fd8\u5f55\u4e2d\u3002 ", "ar": "\u064a\u0648\u062c\u062f API \u062e\u0627\u0635 \u0628\u0640METAR \u0641\u064a \u0645\u0644\u0627\u062d\u0638\u0627\u062a\u064a. \u0633\u0627\u0639\u062f\u0646\u064a \u0641\u064a \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0639\u0646\u0648\u0627\u0646 URL \u0645\u0628\u0627\u0634\u0631\u0629 \u062b\u0645 \u0646\u0633\u062e \u062a\u0642\u0631\u064a\u0631 \u0627\u0644\u0637\u0642\u0633 METAR \u0627\u0644\u062d\u0627\u0644\u064a \u0625\u0644\u0649 \u0627\u0644\u0645\u0644\u0627\u062d\u0638\u0629. ", "ja": "\u30e1\u30e2\u306bMETAR API\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306eURL\u306b\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u73fe\u5728\u306eMETAR\u5929\u6c17\u5831\u544a\u3092\u30e1\u30e2\u306b\u30b3\u30d4\u30fc\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ", "ru": "\u0412 \u043c\u043e\u0438\u0445 \u0437\u0430\u043c\u0435\u0442\u043a\u0430\u0445 \u0435\u0441\u0442\u044c METAR API. \u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u043c\u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u044d\u0442\u043e\u043c\u0443 URL \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e, \u0430 \u0437\u0430\u0442\u0435\u043c \u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 METAR \u043e\u0442\u0447\u0435\u0442 \u043e \u043f\u043e\u0433\u043e\u0434\u0435 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 \u0437\u0430\u043c\u0435\u0442\u043a\u0443. "}, "pre_command": "defaults write com.apple.Notes windowStateArchive -dict-add currentNoteContainerViewMode 0 && osascript -e 'tell application \"Notes\" to make new note with properties {name:\"Lorem Ipsum\", body:\"Dolor Sit Amet\"}' && osascript -e 'tell application \"Notes\" to delete every note' -e 'tell application \"Notes\" to delete every note in folder \"Recently Deleted\"' && osascript -e 'tell application \"Notes\" to make new note with properties {name:\"METAR API\", body:\"https://tgftp.nws.noaa.gov/data/observations/metar/stations/WSSS.TXT\"}' ", "before_action_delay_seconds": 5, "before_grading_delay_seconds": 5, "grading_command": [["osascript -e 'tell application \"Notes\" to get the body of every note' | grep -q \"$(curl -s \"https://aviationweather.gov/cgi-bin/data/metar.php?ids=WSSS&hours=2&order=id%2c-obs&sep=true\" | head -n 1)\" && echo \"True\" || echo \"False\" ", 100], ["osascript -e 'tell application \"Notes\" to get the body of every note' | grep -q \"$(curl -s \"https://aviationweather.gov/cgi-bin/data/metar.php?ids=WSSS&hours=2&order=id%2c-obs&sep=true\" | sed -n '2p')\" && echo \"True\" || echo \"False\" ", 100]]}